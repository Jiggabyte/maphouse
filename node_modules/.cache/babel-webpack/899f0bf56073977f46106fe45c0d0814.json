{"ast":null,"code":"import * as L from \"leaflet\";\nconst iconRetinaUrl = './assets/marker-icon-2x.png';\nconst iconUrl = './assets/marker-icon.png';\nconst shadowUrl = './assets/marker-shadow.png';\nconst iconDefault = L.icon({\n  iconRetinaUrl,\n  iconUrl,\n  shadowUrl,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  tooltipAnchor: [16, -28],\n  shadowSize: [41, 41]\n});\nL.Marker.prototype.options.icon = iconDefault;\nexport const initMap = (elemId, layers = {}) => {\n  let baseLayers = {};\n  let mainBaseLayer = [L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n  })];\n\n  for (let layerName in layers) {\n    let layer = layers[layerName];\n    baseLayers[layerName] = L.tileLayer(layer.url, layer.opts);\n    mainBaseLayer.push(baseLayers[layerName]);\n  }\n\n  const map = L.map(elemId, {\n    layers: mainBaseLayer\n  }).setView([0, 0], 3);\n  layerControl = L.control.layers(baseLayers, {}, {\n    collapsed: false\n  });\n  layerControl.addTo(map);\n  return {\n    \"mapObject\": map,\n    \"layerControl\": layerControl\n  };\n};\nexport const renderData = (mapObject, geojson, layerName = \"\", styleProps = {}) => {\n  let styleFunc;\n\n  if (typeof styleProps.conditions !== \"undefined\") {\n    const prop = styleProps.property;\n\n    styleFunc = function (feature) {\n      let style = [];\n\n      for (let key in styleProps.conditions) {\n        let value = styleProps.conditions[key];\n\n        if (feature.properties[prop] == key) {\n          style = value;\n        }\n      }\n\n      return style;\n    };\n  } else if (typeof styleProps.style !== \"undefined\") {\n    styleFunc = function (feature) {\n      return styleProps.style;\n    };\n  } else {\n    styleFunc = function (feature) {\n      return \"#000\";\n    };\n  }\n\n  const layer = L.geoJSON(geojson, {\n    style: styleFunc\n  });\n  layer.addTo(mapObject);\n  return layer;\n};\nexport const attachEvent = (obj, event, callback) => {\n  obj.on(event, callback);\n};\nexport const initFeatureGroup = () => {\n  return new L.FeatureGroup();\n};\nexport const initLayerGroup = () => {\n  return L.layerGroup();\n};\nexport const mapInit = (tup, map) => {\n  const mapx = L.map(map, {\n    center: tup,\n    zoom: 3\n  });\n  const tiles = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 18,\n    minZoom: 3,\n    attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\n  });\n  tiles.addTo(mapx);\n  return mapx;\n};\nexport const initMarker = (tup, mapObject) => {\n  return L.marker(tup).addTo(mapObject);\n};","map":null,"metadata":{},"sourceType":"module"}