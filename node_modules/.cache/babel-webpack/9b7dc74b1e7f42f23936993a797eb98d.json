{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, NgModule } from '@angular/core';\n\nclass SytemapjsService {\n  constructor() {}\n\n}\n\nSytemapjsService.ɵfac = function SytemapjsService_Factory(t) {\n  return new (t || SytemapjsService)();\n};\n\nSytemapjsService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: SytemapjsService,\n  factory: SytemapjsService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SytemapjsService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nclass SytemapjsComponent {\n  constructor() {}\n\n  ngOnInit() {}\n\n}\n\nSytemapjsComponent.ɵfac = function SytemapjsComponent_Factory(t) {\n  return new (t || SytemapjsComponent)();\n};\n\nSytemapjsComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SytemapjsComponent,\n  selectors: [[\"lib-sytemapjs\"]],\n  decls: 2,\n  vars: 0,\n  template: function SytemapjsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \" sytemapjs works! \");\n      i0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SytemapjsComponent, [{\n    type: Component,\n    args: [{\n      selector: 'lib-sytemapjs',\n      template: `\n    <p>\n      sytemapjs works!\n    </p>\n  `,\n      styles: []\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nclass SytemapjsModule {}\n\nSytemapjsModule.ɵfac = function SytemapjsModule_Factory(t) {\n  return new (t || SytemapjsModule)();\n};\n\nSytemapjsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: SytemapjsModule\n});\nSytemapjsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SytemapjsModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [SytemapjsComponent],\n      imports: [],\n      exports: [SytemapjsComponent]\n    }]\n  }], null, null);\n})();\n/*\n * Public API Surface of sytemapjs\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { SytemapjsComponent, SytemapjsModule, SytemapjsService };","map":{"version":3,"sources":["/home/jigga/VisualStudioProjects/maphouse/projects/sytemapjs/src/lib/sytemapjs.service.ts","/home/jigga/VisualStudioProjects/maphouse/projects/sytemapjs/src/lib/sytemapjs.component.ts","/home/jigga/VisualStudioProjects/maphouse/projects/sytemapjs/src/lib/sytemapjs.module.ts","/home/jigga/VisualStudioProjects/maphouse/projects/sytemapjs/src/public-api.ts"],"names":[],"mappings":";;;MAKa,gB,CAAgB;AAE3B,EAAA,WAAA,GAAA,CAAiB;;AAFU;;;mBAAhB,gB;;;;SAAA,gB;WAAA,gB;cAFC;;;;0EAED,gB,EAAgB,CAAA;UAH5B,UAG4B;WAHjB;AACV,MAAA,UAAU,EAAE;AADF,K;AAGiB,GAAA,C;;;;;MCOhB,kB,CAAkB;AAE7B,EAAA,WAAA,GAAA,CAAiB;;AAEjB,EAAA,QAAQ,GAAA,CACP;;AAL4B;;;mBAAlB,kB;;;;QARD,kB;;;;;;;;;;;;;;;0EAQC,kB,EAAkB,CAAA;UAV9B,SAU8B;WAVpB;AACT,MAAA,QAAQ,EAAE,eADD;AAET,MAAA,QAAQ,EAAE;;;;AAIT,GANQ;AAOT,MAAA,MAAM,EAAE;AAPC,K;AAUoB,GAAA,C;;;;;MCGlB,e,CAAe;;;mBAAf,e;;;;QART;;gBAQS,I;YANF,E;;;;0EAME,e,EAAe,CAAA;UAV3B,QAU2B;WAVlB;AACR,MAAA,YAAY,EAAE,CACZ,kBADY,CADN;AAIR,MAAA,OAAO,EAAE,EAJD;AAMR,MAAA,OAAO,EAAE,CACP,kBADO;AAND,K;AAUkB,GAAA,C;;ACf5B;;;;AAAA","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SytemapjsService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-sytemapjs',\n  template: `\n    <p>\n      sytemapjs works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class SytemapjsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { SytemapjsComponent } from './sytemapjs.component';\n\n\n\n@NgModule({\n  declarations: [\n    SytemapjsComponent\n  ],\n  imports: [\n  ],\n  exports: [\n    SytemapjsComponent\n  ]\n})\nexport class SytemapjsModule { }\n","/*\n * Public API Surface of sytemapjs\n */\n\nexport * from './lib/sytemapjs.service';\nexport * from './lib/sytemapjs.component';\nexport * from './lib/sytemapjs.module';\n"]},"metadata":{},"sourceType":"module"}